[{"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\index.js":"1","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\App.js":"2","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Join\\Join.jsx":"3","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Chat\\Chat.jsx":"4","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Authentication\\Authentication.jsx":"5","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Login\\Login.jsx":"6","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Input\\Input.jsx":"7","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\InfoBar\\InfoBar.jsx":"8","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Messages\\Messages.jsx":"9","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\RoomInfo\\RoomInfo.jsx":"10","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Message\\Message.jsx":"11"},{"size":197,"mtime":1608824583000,"results":"12","hashOfConfig":"13"},{"size":631,"mtime":1608824583000,"results":"14","hashOfConfig":"13"},{"size":6189,"mtime":1609100447682,"results":"15","hashOfConfig":"13"},{"size":2930,"mtime":1609096976195,"results":"16","hashOfConfig":"13"},{"size":5054,"mtime":1609108562013,"results":"17","hashOfConfig":"13"},{"size":2707,"mtime":1609071802489,"results":"18","hashOfConfig":"13"},{"size":504,"mtime":1608824583000,"results":"19","hashOfConfig":"13"},{"size":566,"mtime":1609072387353,"results":"20","hashOfConfig":"13"},{"size":508,"mtime":1609009194387,"results":"21","hashOfConfig":"13"},{"size":673,"mtime":1608824583000,"results":"22","hashOfConfig":"13"},{"size":987,"mtime":1609074222499,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"3ow9r2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\index.js",[],["51","52"],"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\App.js",[],"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Join\\Join.jsx",["53"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport LoadingScreen from \"react-loading-screen\";\r\nimport onlineIcon from \"../../icons/onlineIcon.png\";\r\nimport whatsappLogo from \"../../icons/whatsappLogo.png\";\r\nimport \"./join.css\";\r\nimport io from \"socket.io-client\";\r\n\r\nlet socket;\r\nconst CONNECTIONPOINT = \"localhost:5000\";\r\n\r\nconst Join = ({ location }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  // const [reload, setReload] = useState(true);\r\n  const [ldScreen, setLdScreen] = useState(true);\r\n  const [roomCheck, setRoomCheck] = useState(false);\r\n  const [roomFound, setRoomFound] = useState(false);\r\n  const [exists, setExists] = useState(false);\r\n  const [pubRoom, setPubRoom] = useState(false);\r\n  const [created, setCreated] = useState(false);\r\n  const [creating, setCreating] = useState();\r\n  const [privateRoomName, setPrivateRoomName] = useState(\"\");\r\n  const [roomLoaded, setRoomLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { name } = queryString.parse(location.search);\r\n    socket = io(CONNECTIONPOINT);\r\n    setName(name);\r\n    socket.emit(\"atJoinScreen\", { name }, () => {});\r\n    console.log(name);\r\n  }, [location]);\r\n\r\n  const handleRoom = (e) => {\r\n    if (!room) return e.preventDefault();\r\n    setPubRoom(false);\r\n    setCreating(true);\r\n    setCreated(false);\r\n\r\n    socket.emit(\"newRoom\", { room }, (callback) => {\r\n      if (callback === \"exists\") {\r\n        console.log(callback);\r\n        setExists(true);\r\n        setCreating(false);\r\n      }\r\n      if (callback === \"created\") {\r\n        console.log(callback);\r\n        setCreating(false);\r\n        setCreated(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { name } = queryString.parse(location.search);\r\n    setName(name);\r\n    socket.emit(\"getUsers\", name, () => setUsers(\"\"));\r\n    socket.on(\"loadUsers\", (callback) => {\r\n      console.log(callback);\r\n      setUsers(callback);\r\n      console.log(users);\r\n      setLdScreen(false);\r\n    });\r\n    return () => {\r\n      socket.off();\r\n    };\r\n  }, []);\r\n\r\n  const privateRoom = (friendName) => {\r\n    console.log(name);\r\n    setRoomCheck(true);\r\n    let privRoom = name + \"\" + friendName;\r\n    privRoom = [...privRoom].sort((a, b) => a.localeCompare(b)).join(\"\");\r\n    console.log(privRoom);\r\n\r\n    friendName = `${friendName} & ${name}`;\r\n    socket.emit(\"newPrivateRoom\", { privRoom, friendName }, (callback) => {\r\n      if (callback === \"exists\") {\r\n        console.log(callback);\r\n        setExists(true);\r\n        setCreating(false);\r\n        setPrivateRoomName(privRoom);\r\n        setRoomLoaded(true);\r\n        setRoomCheck(false);\r\n      }\r\n      if (callback === \"created\") {\r\n        console.log(callback);\r\n        setRoomCheck(false);\r\n        setPrivateRoomName(privRoom);\r\n        setRoomLoaded(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const logOut = (username) => {\r\n    socket.emit(\"logOut\", { username });\r\n  };\r\n\r\n  const checkRoomExistence = (room) => {\r\n    setRoomCheck(true);\r\n    socket.emit(\"findRoom\", { room }, (callback) => {\r\n      if (callback === \"exists\") {\r\n        console.log(callback);\r\n        setRoomFound(true);\r\n        setRoomCheck(false);\r\n      } else {\r\n        console.log(callback);\r\n        setExists(false);\r\n        setPubRoom(true);\r\n        setRoomCheck(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <LoadingScreen\r\n      loading={roomCheck}\r\n      bgColor=\"#383838\"\r\n      spinnerColor=\"#8d8d8d\"\r\n      textColor=\"#bdbdbd\"\r\n      logoSrc={whatsappLogo}\r\n      text=\"Joining room please wait...\"\r\n    >\r\n      <div className=\"joinOuterContainer\">\r\n        <div className=\"joinInnerContainer\">\r\n          <h2 className=\"heading\">Welcome to ChatApp {name}</h2>\r\n          <div>\r\n            <input\r\n              placeholder=\"Room\"\r\n              className=\"joinInput mt-20\"\r\n              type=\"text\"\r\n              onChange={(e) => setRoom(e.target.value)}\r\n            />\r\n            {pubRoom ? <p className=\"status\">Room does NOT exist!</p> : null}\r\n            {creating ? <p className=\"status\">creating room...</p> : null}\r\n            {exists ? <p className=\"status\">Room already exists!</p> : null}\r\n          </div>\r\n          <button\r\n            className=\"button mt-20\"\r\n            type=\"submit\"\r\n            onClick={() => checkRoomExistence(room)}\r\n          >\r\n            Join Room\r\n          </button>\r\n          {roomFound ? (\r\n            <Redirect to={`./chat?name=${name}&room=${room}`} />\r\n          ) : null}\r\n          <button onClick={handleRoom} className=\"button mt-20\" type=\"submit\">\r\n            Create Room\r\n          </button>\r\n          {created ? (\r\n            <Redirect to={`./chat?name=${name}&room=${room}`} />\r\n          ) : null}\r\n          <Link to={\"./\"}>\r\n            <button\r\n              className=\"button mt-20\"\r\n              type=\"submit\"\r\n              onClick={(e) => (!name ? e.preventDefault : logOut(name))}\r\n            >\r\n              Logout\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"onlineContainer\">\r\n          {ldScreen ? (\r\n            <div style={{ marginTop: \"10%\" }}>\r\n              <h3 style={{ color: \"#4b4b4b\" }}>Loading...</h3>\r\n            </div>\r\n          ) : (\r\n            <div className=\"listContainer\">\r\n              <h3>Online Friends:</h3>\r\n              {users.map((user, i) =>\r\n                user._id !== name ? (\r\n                  <h4\r\n                    onClick={() => privateRoom(user._id)}\r\n                    className=\"onlineList\"\r\n                    key={i}\r\n                  >\r\n                    <img alt=\"Online Icon\" src={onlineIcon} /> &nbsp;\r\n                    {` ${user.name} (${user._id})`}\r\n                  </h4>\r\n                ) : null\r\n              )}\r\n              {roomLoaded ? (\r\n                <Redirect to={`chat?name=${name}&room=${privateRoomName}`} />\r\n              ) : null}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </LoadingScreen>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Chat\\Chat.jsx",["54","55","56"],"import React from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./chat.css\";\r\nimport InfoBar from \"../InfoBar/InfoBar\";\r\nimport Input from \"../Input/Input\";\r\nimport Messages from \"../Messages/Messages\";\r\nimport RoomInfo from \"../RoomInfo/RoomInfo\";\r\n\r\nlet socket;\r\n\r\nconst Chat = ({ location }) => {\r\n  //location is provided by react-router as a prop automatically\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState();\r\n  const [chatHistory, setHistory] = useState();\r\n  const [loaded, setLoaded] = useState(false);\r\n  const CONNECTIONPOINT = \"localhost:5000\";\r\n\r\n  //for joining\r\n  useEffect(() => {\r\n    const { name, room } = queryString.parse(location.search);\r\n    let chatName;\r\n    socket = io(CONNECTIONPOINT);\r\n    console.log(\"getting room name\");\r\n    socket.emit(\"getRoomName\", { room }, (roomName) => {\r\n      setRoom(roomName);\r\n      chatName = roomName;\r\n    });\r\n    setName(name);\r\n    // console.log(name);\r\n    // setRoom(room);\r\n\r\n    //emitting event which will be defined in backend index.js\r\n    socket.emit(\"join\", { name, room }, () => {});\r\n\r\n    return () => {\r\n      //emitting disconnect event which we defined in backend index.js\r\n      // socket.emit(\"disconnect\");\r\n      //turning the specific socket off on unmount\r\n      socket.off();\r\n    };\r\n  }, [CONNECTIONPOINT, location.search]);\r\n\r\n  //for showing message\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      setMessages([...messages, message]);\r\n    });\r\n\r\n    socket.on(\"roomData\", ({ users }) => {\r\n      setUsers(users);\r\n      // console.log(users)\r\n    });\r\n    return () => {\r\n      socket.off();\r\n    };\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    ////////////////////////////\r\n    socket.emit(\"oldMessage\", {}, () => setMessage(\"\"));\r\n    socket.on(\"chatHistory\", (history) => {\r\n      // console.log('getting chat history');\r\n      setHistory(history);\r\n      setLoaded(true);\r\n    });\r\n    if (chatHistory) {\r\n      setMessages(messages.concat(chatHistory));\r\n    }\r\n  }, chatHistory);\r\n\r\n  //for sending message\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    socket.emit(\"sendMessage\", { message }, () => setMessage(\"\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"outerContainer\">\r\n      <div className=\"container\">\r\n        <InfoBar room={room} name={name} />\r\n        {loaded ? null : <div className=\"loadingMessage\">loading messages</div>}\r\n        <Messages messages={messages} name={name} />\r\n        <Input\r\n          message={message}\r\n          setMessage={setMessage}\r\n          sendMessage={sendMessage}\r\n        />\r\n      </div>\r\n      <RoomInfo users={users} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Authentication\\Authentication.jsx",["57","58"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport LoadingScreen from \"react-loading-screen\";\nimport io from \"socket.io-client\";\nimport whatsappLogo from \"../../icons/whatsappLogo.png\";\nimport \"./authentication.css\";\n\nlet socket;\n\nconst Authentication = () => {\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [invalidEmail, setInvalidEmail] = useState(false);\n  const [invalidPwd, setInvalidPwd] = useState(false);\n  const [signingUp, setSigningUp] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  const [userExists, setUserExists] = useState(false);\n  const [error, setError] = useState(\"\");\n  const CONNECTIONPOINT = \"localhost:5000\";\n\n  const handleForm = (e) => {\n    if (!name || !username || !email || !password) return e.preventDefault();\n    let emailinvalid = false;\n    let pwdinvalid = false;\n\n    let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!re.test(email)) {\n      //invalid\n      setInvalidEmail(true);\n      emailinvalid = true;\n    } else {\n      setInvalidEmail(false);\n      emailinvalid = false;\n    }\n\n    if (password.length < 6) {\n      //invalid\n      setInvalidPwd(true);\n      pwdinvalid = true;\n    } else {\n      setInvalidPwd(false);\n      pwdinvalid = false;\n    }\n    if (!emailinvalid && !pwdinvalid) {\n      console.log(\"in sign up!\");\n      setSigningUp(true);\n      setUserExists(false);\n      socket = io(CONNECTIONPOINT);\n      socket.emit(\"signUp\", { username, name, email, password }, (callback) => {\n        if (callback === \"usernameexists\") {\n          setError(\"Username already exists!\");\n          setUserExists(true);\n          setSigningUp(false);\n        }\n        if (callback === \"emailexists\") {\n          setError(\"Email already exists!\");\n          setUserExists(true);\n          setSigningUp(false);\n        }\n        if (callback === \"bothexist\") {\n          setError(\"Username and Email are taken\");\n          setUserExists(true);\n          setSigningUp(false);\n        }\n        if (callback === \"signedup\") {\n          setError(\"\");\n          setSigningUp(false);\n          setRedirect(true);\n        }\n      });\n    }\n  };\n\n  return (\n    <LoadingScreen\n      loading={signingUp}\n      bgColor=\"#383838\"\n      spinnerColor=\"#8d8d8d\"\n      textColor=\"#bdbdbd\"\n      logoSrc={whatsappLogo}\n      text=\"Signing up please wait...\"\n    >\n      <div className=\"joinOuterContainer\">\n        <div className=\"joinInnerContainer\">\n          <h1 className=\"heading\">Sign up</h1>\n          <div>\n            <input\n              placeholder=\"Name\"\n              className=\"joinInput\"\n              type=\"text\"\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div>\n            <input\n              placeholder=\"Username\"\n              className=\"joinInput mt-20\"\n              type=\"text\"\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n          <div className=\"inputContainer\">\n            <input\n              placeholder=\"email@email.com\"\n              className=\"joinInput mt-20\"\n              type=\"text\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            {invalidEmail ? (\n              <p className=\"status\">please enter a valid email</p>\n            ) : null}\n          </div>\n          <div className=\"inputContainer\">\n            <input\n              placeholder=\"password\"\n              className=\"joinInput mt-20\"\n              type=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            {invalidPwd ? (\n              <p className=\"status\">\n                lenth of password must be greated than six\n              </p>\n            ) : null}\n          </div>\n          {userExists ? <p className=\"status\">{error}</p> : null}\n          <button className=\"button mt-20\" type=\"submit\" onClick={handleForm}>\n            Register\n          </button>\n\n          {redirect ? <Redirect to={`./join?name=${username}`} /> : null}\n          <Link to={\"./\"}>\n            <button className=\"button mt-20\" type=\"submit\">\n              Sign in\n            </button>\n          </Link>\n          {/* <Link\n                    onClick={handleForm}\n                    to={''}\n                >\n                    {error ?\n                        <button className=\"button mt-20\" type=\"submit\" >\n                            Register\n                    </button>\n                        :\n                        <button className=\"button mt-20\" type=\"submit\" to={`./chat?name=${name}&room=${email}`}>\n                            Register\n                    </button>\n                    }\n                </Link> */}\n        </div>\n      </div>\n    </LoadingScreen>\n  );\n};\n\nexport default Authentication;\n","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Login\\Login.jsx",[],"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Input\\Input.jsx",[],"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\InfoBar\\InfoBar.jsx",[],"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Messages\\Messages.jsx",[],"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\RoomInfo\\RoomInfo.jsx",[],"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Message\\Message.jsx",[],["59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":70,"column":6,"nodeType":"67","endLine":70,"endColumn":8,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":32,"column":7,"nodeType":"71","messageId":"72","endLine":32,"endColumn":15},{"ruleId":"65","severity":1,"message":"73","line":75,"column":6,"nodeType":"71","endLine":75,"endColumn":17},{"ruleId":"65","severity":1,"message":"74","line":75,"column":6,"nodeType":"71","endLine":75,"endColumn":17,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":28,"column":24,"nodeType":"78","messageId":"79","endLine":28,"endColumn":25,"suggestions":"80"},{"ruleId":"76","severity":1,"message":"77","line":28,"column":49,"nodeType":"78","messageId":"79","endLine":28,"endColumn":50,"suggestions":"81"},{"ruleId":"61","replacedBy":"82"},{"ruleId":"63","replacedBy":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location.search' and 'users'. Either include them or remove the dependency array.","ArrayExpression",["86"],"no-unused-vars","'chatName' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'chatHistory' and 'messages'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMessages' needs the current value of 'chatHistory'.",["87"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["88","89"],["90","91"],["84"],["85"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"messageId":"96","fix":"97","desc":"98"},{"messageId":"99","fix":"100","desc":"101"},{"messageId":"96","fix":"102","desc":"98"},{"messageId":"99","fix":"103","desc":"101"},"Update the dependencies array to be: [location.search, users]",{"range":"104","text":"105"},"Update the dependencies array to be: [chatHistory, messages]",{"range":"106","text":"107"},"removeEscape",{"range":"108","text":"109"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"110","text":"111"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"112","text":"109"},{"range":"113","text":"111"},[2227,2229],"[location.search, users]",[2256,2267],"[chatHistory, messages]",[1038,1039],"",[1038,1038],"\\",[1063,1064],[1063,1063]]