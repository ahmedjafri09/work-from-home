[{"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\index.js":"1","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\App.js":"2","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Join\\Join.jsx":"3","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Chat\\Chat.jsx":"4","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Authentication\\Authentication.jsx":"5","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Login\\Login.jsx":"6","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Input\\Input.jsx":"7","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\InfoBar\\InfoBar.jsx":"8","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Messages\\Messages.jsx":"9","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\RoomInfo\\RoomInfo.jsx":"10","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Message\\Message.jsx":"11"},{"size":197,"mtime":1608824583000,"results":"12","hashOfConfig":"13"},{"size":631,"mtime":1608824583000,"results":"14","hashOfConfig":"13"},{"size":5781,"mtime":1609005527666,"results":"15","hashOfConfig":"13"},{"size":2930,"mtime":1609005527760,"results":"16","hashOfConfig":"13"},{"size":2463,"mtime":1609005527856,"results":"17","hashOfConfig":"13"},{"size":2707,"mtime":1609005527610,"results":"18","hashOfConfig":"13"},{"size":504,"mtime":1608824583000,"results":"19","hashOfConfig":"13"},{"size":566,"mtime":1608934709906,"results":"20","hashOfConfig":"13"},{"size":508,"mtime":1609009194387,"results":"21","hashOfConfig":"13"},{"size":673,"mtime":1608824583000,"results":"22","hashOfConfig":"13"},{"size":1001,"mtime":1608824583000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"3ow9r2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\index.js",[],["48","49"],"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\App.js",[],"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Join\\Join.jsx",["50"],"import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport onlineIcon from \"../../icons/onlineIcon.png\";\r\nimport \"./join.css\";\r\nimport io from \"socket.io-client\";\r\n\r\nlet socket;\r\nconst CONNECTIONPOINT = \"localhost:5000\";\r\n\r\nconst Join = ({ location }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [room, setRoom] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  // const [reload, setReload] = useState(true);\r\n  const [ldScreen, setLdScreen] = useState(true);\r\n  const [exists, setExists] = useState(false);\r\n  const [creating, setCreating] = useState();\r\n  const [privateRoomName, setPrivateRoomName] = useState(\"\");\r\n  const [roomLoaded, setRoomLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const { name } = queryString.parse(location.search);\r\n    socket = io(CONNECTIONPOINT);\r\n    setName(name);\r\n    socket.emit(\"atJoinScreen\", { name }, () => {});\r\n    console.log(name);\r\n  }, [location]);\r\n\r\n  const handleRoom = (e) => {\r\n    if (!room) return e.preventDefault();\r\n    setCreating(true);\r\n\r\n    socket.emit(\"newRoom\", { room }, (callback) => {\r\n      if (callback === \"exists\") {\r\n        console.log(callback);\r\n        // alert(callback);\r\n        setExists(true);\r\n        setCreating(false);\r\n      }\r\n      if (callback === \"created\") {\r\n        console.log(callback);\r\n        setCreating(false);\r\n        // alert(callback);\r\n        // setExists(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // socket = io(CONNECTIONPOINT);\r\n    const { name } = queryString.parse(location.search);\r\n    setName(name);\r\n    socket.emit(\"getUsers\", name, () => setUsers(\"\"));\r\n    socket.on(\"loadUsers\", (callback) => {\r\n      console.log(callback);\r\n      setUsers(callback);\r\n      console.log(users);\r\n      setLdScreen(false);\r\n    });\r\n    return () => {\r\n      // socket.emit(\"leaving\");\r\n      socket.off();\r\n    };\r\n  }, []);\r\n\r\n  // trying to reload the online users list\r\n  // useEffect(() => {\r\n  //   console.log(\"reloading!\");\r\n  //   const interval = setInterval(() => {\r\n  //     setReload(!reload);\r\n  //     const { name } = queryString.parse(location.search);\r\n  //     setName(name);\r\n  //     socket.emit(\"getUsers\", name, () => setUsers(\"\"));\r\n  //     socket.on(\"loadUsers\", (callback) => {\r\n  //       console.log(callback);\r\n  //       setUsers(callback);\r\n  //       console.log(users);\r\n  //       setLdScreen(false);\r\n  //     });\r\n  //     console.log(\"updated reload: \" + reload);\r\n  //   }, 5000);\r\n  //   return () => clearInterval(interval);\r\n  // }, [reload, users]);\r\n\r\n  const privateRoom = (friendName) => {\r\n    // console.log(socket.id);\r\n    console.log(name);\r\n    let privRoom = name + \"\" + friendName;\r\n    privRoom = [...privRoom].sort((a, b) => a.localeCompare(b)).join(\"\");\r\n    console.log(privRoom);\r\n\r\n    friendName = `${friendName} & ${name}`;\r\n    socket.emit(\"newPrivateRoom\", { privRoom, friendName }, (callback) => {\r\n      if (callback === \"exists\") {\r\n        console.log(callback);\r\n        // alert(callback);\r\n        setExists(true);\r\n        setCreating(false);\r\n        setPrivateRoomName(privRoom);\r\n        setRoomLoaded(true);\r\n      }\r\n      if (callback === \"created\") {\r\n        console.log(callback);\r\n        setPrivateRoomName(privRoom);\r\n        setRoomLoaded(true);\r\n        // alert(callback);\r\n        // setExists(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const logOut = (username) => {\r\n    // event.preventDefault();\r\n\r\n    socket.emit(\"logOut\", { username });\r\n  };\r\n\r\n  return (\r\n    <div className=\"joinOuterContainer\">\r\n      <div className=\"joinInnerContainer\">\r\n        <h2 className=\"heading\">Welcome to ChatApp {name}</h2>\r\n        <div>\r\n          <input\r\n            placeholder=\"Room\"\r\n            className=\"joinInput mt-20\"\r\n            type=\"text\"\r\n            onChange={(e) => setRoom(e.target.value)}\r\n          />\r\n          {creating ? <p className=\"status\">creating room...</p> : null}\r\n          {exists ? <p className=\"status\">Room already exists!</p> : null}\r\n        </div>\r\n        <button onClick={handleRoom} className=\"button mt-20\" type=\"submit\">\r\n          Create Room\r\n        </button>\r\n        <Link\r\n          onClick={(e) => (!room ? e.preventDefault() : null)}\r\n          to={`./chat?name=${name}&room=${room}`}\r\n        >\r\n          <button className=\"button mt-20\" type=\"submit\">\r\n            Join Room\r\n          </button>\r\n        </Link>\r\n        <Link\r\n          // onClick={(e) => (!name || !room ? e.preventDefault() : null)}\r\n          to={\"./\"}\r\n        >\r\n          <button\r\n            className=\"button mt-20\"\r\n            type=\"submit\"\r\n            onClick={(e) => (!name ? e.preventDefault : logOut(name))}\r\n          >\r\n            Logout\r\n          </button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"onlineContainer\">\r\n        {ldScreen ? (\r\n          <div style={{ marginTop: \"10%\" }}>\r\n            <h3>Loading...</h3>\r\n          </div>\r\n        ) : (\r\n          <div className=\"listContainer\">\r\n            <h3>Online Friends:</h3>\r\n            {users.map((user, i) =>\r\n              user._id !== name ? (\r\n                <h4\r\n                  onClick={() => privateRoom(user._id)}\r\n                  className=\"onlineList\"\r\n                  key={i}\r\n                >\r\n                  <img alt=\"Online Icon\" src={onlineIcon} /> &nbsp;\r\n                  {` ${user.name} (${user._id})`}\r\n                </h4>\r\n              ) : null\r\n            )}\r\n            {roomLoaded ? (\r\n              <Redirect to={`chat?name=${name}&room=${privateRoomName}`} />\r\n            ) : null}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Chat\\Chat.jsx",["51","52","53"],"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Authentication\\Authentication.jsx",[],"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Login\\Login.jsx",[],"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Input\\Input.jsx",[],"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\InfoBar\\InfoBar.jsx",[],"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Messages\\Messages.jsx",[],"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\RoomInfo\\RoomInfo.jsx",[],"C:\\Users\\ahmed\\Documents\\Work From Home\\chatapp\\client\\src\\components\\Message\\Message.jsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":71,"column":6,"nodeType":"60","endLine":71,"endColumn":8,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":32,"column":7,"nodeType":"64","messageId":"65","endLine":32,"endColumn":15},{"ruleId":"58","severity":1,"message":"66","line":75,"column":6,"nodeType":"64","endLine":75,"endColumn":17},{"ruleId":"58","severity":1,"message":"67","line":75,"column":6,"nodeType":"64","endLine":75,"endColumn":17,"suggestions":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location.search' and 'users'. Either include them or remove the dependency array.","ArrayExpression",["71"],"no-unused-vars","'chatName' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'chatHistory' and 'messages'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setMessages' needs the current value of 'chatHistory'.",["72"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [location.search, users]",{"range":"77","text":"78"},"Update the dependencies array to be: [chatHistory, messages]",{"range":"79","text":"80"},[2105,2107],"[location.search, users]",[2256,2267],"[chatHistory, messages]"]